{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Documentation",
    "description": "API documentation for managing users, posts, and books."
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Operations related to users"
    },
    {
      "name": "Post",
      "description": "Operations related to posts"
    },
    {
      "name": "Book",
      "description": "Operations related to books"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of users returned",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user-post": {
      "get": {
        "tags": ["User"],
        "summary": "Get users with posts",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of users returned",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserResponseGetPosts"
              }
            }
          }
        }
      }
    },
    "/book": {
      "get": {
        "tags": ["Book"],
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Book"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Book"],
        "summary": "Create a new book",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Book object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Book created successfully",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/post": {
      "get": {
        "tags": ["Post"],
        "summary": "Get all posts",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Post"],
        "summary": "Create a new post",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Post object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "UserCreateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "UserUpdateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "UserResponseGetPosts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "posts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Post"
          }
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "PostCreateRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "Book": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        }
      }
    },
    "BookCreateRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        }
      }
    }
  }
}
